// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ServiceSchool.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20250910144248_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceSchool.Model.Courses", b =>
                {
                    b.Property<int>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCourse"));

                    b.Property<int>("AmountStudents")
                        .HasColumnType("int");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int");

                    b.Property<string>("NameCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCourse");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            IdCourse = 1,
                            AmountStudents = 0,
                            IdTeacher = 1,
                            NameCourse = "Matemáticas"
                        });
                });

            modelBuilder.Entity("ServiceSchool.Model.LogProcess", b =>
                {
                    b.Property<byte[]>("Hash")
                        .HasColumnType("varbinary(900)");

                    b.Property<DateTime>("DateTransaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeTransaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Hash");

                    b.ToTable("LogProcess");
                });

            modelBuilder.Entity("ServiceSchool.Model.SchoolGrades", b =>
                {
                    b.Property<int>("IdSchoolGrades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchoolGrades"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("SchoolGrade")
                        .HasColumnType("int");

                    b.HasKey("IdSchoolGrades");

                    b.ToTable("SchoolGrades");
                });

            modelBuilder.Entity("ServiceSchool.Model.Students", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<string>("ContactGuardian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumberStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCourse")
                        .HasColumnType("int");

                    b.Property<string>("NameGuardian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameStudent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurnameStuden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStudent");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            IdStudent = 1,
                            ContactGuardian = "555-1234",
                            DocumentNumberStudent = "12345678",
                            IdCourse = 1,
                            NameGuardian = "Luis García",
                            NameStudent = "Ana",
                            SurnameStuden = "García"
                        });
                });

            modelBuilder.Entity("ServiceSchool.Model.Teachers", b =>
                {
                    b.Property<int>("IdTeacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTeacher"));

                    b.Property<string>("NameTeacher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTeacher");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            IdTeacher = 1,
                            NameTeacher = "Juan Pérez"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
